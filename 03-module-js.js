/*
 * –û–±—ä–µ–∫—Ç—ã (–¥–µ–ª–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç –º—É–∑—ã–∫–∏: –∏–º—è, —Ä–µ–π—Ç–∏–Ω–≥, —Ç—Ä–µ–∫–∏, –∫–æ–ª-–≤–æ —Ç—Ä–µ–∫–æ–≤)
 * - –õ–∏—Ç–µ—Ä–∞–ª –æ–±—ä–µ–∫—Ç–∞ (—Å–ø—Ä–∞–≤–∞ –æ—Ç —Ä–∞–≤–Ω–æ - –ª–∏—Ç–µ—Ä–∞–ª)
 * - –°–≤–æ–π—Å—Ç–≤–∞, –∫–ª—é—á–∏ (–∏–º—è) –∏ –∑–Ω–∞—á–µ–Ω–∏—è
 * - –ö–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –æ—Ç –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
 */

// const playlist = {
//   name: '–ú–æ–π —Å—É–ø–µ—Ä –ø–ª–µ–π–ª–∏—Å—Ç',
//   rating: 5,
//   tracks: ['—Ç—Ä–µ–∫-1', '—Ç—Ä–µ–∫-2', '—Ç—Ä–µ–∫-3'],
//   trackCount: 3,
// };

// console.log(playlist);

// const x = {};

// const fn = function (myObject) {
//   // myObject = { a: 1, b: 2 }
//   console.log(myObject);
// };

// fn({ a: 1, b: 2 });

// const rtfm = function () {
//   return { a: 5 };
// };

// console.log(rtfm());

/*
 * –î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤—É
 * - obj.key
 * - obj['key']
 * - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
 */

// –∫–ª—é—á —Å–≤–æ–π—Å—Ç–≤–∞ - —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∫–∞

const playlist = {
    name: '–ú–æ–π —Å—É–ø–µ—Ä –ø–ª–µ–π–ª–∏—Å—Ç',
    rating: 5,
    tracks: ['—Ç—Ä–µ–∫-1', '—Ç—Ä–µ–∫-2', '—Ç—Ä–µ–∫-3'],
    trackCount: 3,
  };
  
  // playlist.qwe = 5;
  
  // playlist.rating = 10;
  
  // console.log(playlist);
  
  // console.log(playlist);
  // console.log(playlist.tracks);
  // console.log(playlist.name);
  // console.log(playlist.trackCount);
  
  const propertyName = 'tracks';
  
  // console.log(playlist.rating);
  // console.log(playlist['rating']);
  
  // console.log(playlist.propertyName);
  // console.log(playlist[propertyName]);
  
  /*
   * –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å —Å–≤–æ–π—Å—Ç–≤
   */
//   –µ—Å–ª–∏ –∏–º—è –∫–ª—é—á–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–º–µ–Ω–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ
  const username = 'Mango';
  const email = 'mango@mail.com';
  
  const signupData = {
    username,
    email,
  };
  
  // console.log(signupData);
  
  /*
   * –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
   */
  
  //  <input name="color" value="tomato" >
  
  const inputName = 'color';
  const inputValue = 'tomato';

// [inputName] - —á—Ç–æ–±—ã –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–æ –∏–º–µ–Ω–µ–º –∫–ª—é—á–∞
  
  const colorPickerData = {
    [inputName]: inputValue,
  };
  
  // console.log(colorPickerData);
  
  /*
   * –°—Å—ã–ª–æ—á–Ω—ã–π —Ç–∏–ø {} === {}
   */
  
  // console.log({ a: 1 } === { a: 1 }); ---> false
  // console.log([] === []); ---> false
  
  // const a = { x: 1, y: 2 };
  // const b = a;
  
  // console.log(b === a); ---> true
  
  // a.hello = 100;
  // b.hello = 150;
  
  // console.log(a);
  // console.log(b);
  
  /*
   * –ú–∞—Å—Å–∏–≤—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã
   */

//   –ú–∞—Å—Å–∏–≤ - —ç—Ç–æ —á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π –æ–±—ä–µ–∫—Ç–∞
  
  // const a = [1, 2, 3];
  
  // a.hello = ':)';
  
  // console.log(a);
  
  // const fn = function () {
  //   console.log('hello');
  // };
  
  // fn.hello = ';)';
  
  // console.dir(fn.hello);


  /*
 * –ú–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞ –∏ this –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –≤ –º–µ—Ç–æ–¥–∞—Ö
 *
 * http://fecore.net.ua/books/m5ph3r-javascript/module-03/images/context.jpg
 *
 * - changeName
 * - addTrack
 * - updateRating
 * - getTrackCount
 */

const playlist = {
    name: '–ú–æ–π —Å—É–ø–µ—Ä –ø–ª–µ–π–ª–∏—Å—Ç',
    rating: 5,
    tracks: ['—Ç—Ä–µ–∫-1', '—Ç—Ä–µ–∫-2', '—Ç—Ä–µ–∫-3'],
    changeName(newName) {
      console.log('this –≤–Ω—É—Ç—Ä–∏ changeName: ', this);
  
      this.name = newName;
    },
    addTrack(track) {
      this.tracks.push(track);
    },
    updateRating(newRating) {
      this.rating = newRating;
    },
    getTrackCount() {
      return this.tracks.length;
    },
  };
  
  console.log(playlist.getTrackCount());
  
  playlist.changeName('–ù–æ–≤–æ–µ –∏–º—è');
  
  playlist.addTrack('–Ω–æ–≤—ã–π —Ç—Ä–µ–∫ 1');
  console.log(playlist.getTrackCount());
  
  playlist.addTrack('–Ω–æ–≤—ã–π —Ç—Ä–µ–∫ 2');
  console.log(playlist.getTrackCount());
  
  playlist.updateRating(4);
  
  console.log(playlist);


  /*
 * –ü–µ—Ä–µ–±–æ—Ä —á–µ—Ä–µ–∑ for...in –∏ Object.keys|values|entries
 */

// !!! –ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å!!!

const feedback = {
    good: 5,
    neutral: 10,
    bad: 3,
  };
  
  let totalFeedback = 0;

//  #1 –°–ø–æ—Å–æ–± –ø–µ—Ä–µ–±—Ä–∞—Ç—å –æ–±—ä–µ–∫—Ç
  
//   1. –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π
  const keys = Object.keys(feedback); //–º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π
// 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª—ã –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤
// for...
// for...of

  console.log(keys);
  
  for (const key of keys) {
    console.log(key);
    console.log(feedback[key]);
  
    totalFeedback += feedback[key];
  }
  
  console.log('totalFeedback: ', totalFeedback);
  

// #2 –°–ø–æ—Å–æ–± –ø–µ—Ä–µ–±—Ä–∞—Ç—å –æ–±—ä–µ–∫—Ç
  const values = Object.values(feedback);
  
  console.log(values);
  
  for (const value of values) {
    console.log(value);
  
    totalFeedback += value;
  }
  
  console.log('totalFeedback: ', totalFeedback);



  /*
 * –†–∞–±–æ—Ç–∞ —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π (–º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤)
 */
const friends = [
    { name: 'Mango', online: false },
    { name: 'Kiwi', online: true },
    { name: 'Poly', online: false },
    { name: 'Ajax', online: false },
  ];
  
//   –ü—Ä–∏ –ø–µ—Ä–µ–±–æ—Ä–µ –º–∞—Å—Å–∏–≤–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –º—ã –ø–æ–ª—É—á–∞–µ–º –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç
// –≤ –∏—Ç–æ–≥–µ –º—ã –º–æ–∂–µ–º –µ–≥–æ –∏–∑–º–µ–Ω—è—Ç—å

for (const friend of friends) {
    friend.newprop = 555; // –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–æ–±–∞–≤–∏—Ç—Å—è –≤ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –º–∞—Å—Å–∏–≤–∞
}

console.table(friends);
  
  /*
   * –ò—â–µ–º –¥—Ä—É–≥–∞ –ø–æ –∏–º–µ–Ω–∏
   */
  
  const findFriendByName = function (allFriends, friendName) {
    for (const friend of allFriends) {
      // console.log(friend);
      // console.log(friend.name);
  
      if (friend.name === friendName) {
        return '–ù–ê–®–õ–ò!!!';
      }
    }
  
    return '–ù–ï –ù–ê–®–õ–ò :(';
  };
  
  // console.log(findFriendByName(friends, 'Poly'));
  // console.log(findFriendByName(friends, 'Chelsy'));
  
  /*
   * –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π
   */
  
  const getAllNames = function (allFriends) {
    const names = [];
  
    for (const friend of allFriends) {
      console.log(friend.name);
  
      names.push(friend.name);
    }
  
    return names;
  };
  
  // console.log(getAllNames(friends));
  
  /*
   * –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥—Ä—É–∑–µ–π –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–ª–∞–π–Ω
   */
  const getOnlineFriends = function (allFriends) {
    const onlineFriends = [];
  
    for (const friend of allFriends) {
      console.log(friend);
      console.log(friend.online);
  
      if (friend.online) {
        onlineFriends.push(friend);
      }
    }
  
    return onlineFriends;
  };
  
  // console.log(getOnlineFriends(friends));
  
  const getOfflineFriends = function (allFriends) {
    const offlineFriends = [];
  
    for (const friend of allFriends) {
      console.log(friend.online);
  
      if (!friend.online) {
        offlineFriends.push(friend);
      }
    }
  
    return offlineFriends;
  };
  
  // console.log(getOfflineFriends(friends));
  
  // —Å–æ–∑–¥–∞—Ç—å 2 –º–∞—Å—Å–∏–≤–∞ –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω?
  // –µ—Å–ª–∏ —Ç—Ä—É - –≤ –ø–µ—Ä–≤—ã–π, –µ—Å–ª–∏ –Ω–µ—Ç - –≤–æ –≤—Ç–æ—Ä–æ–π
  
  const getFriendsByStatus = function (allFriends) {
    const friendsByStatus = {
      online: [],
      offline: [],
    };
  
    for (const friend of allFriends) {
      if (friend.online) {
        friendsByStatus.online.push(friend);
        continue;
      }
  
      friendsByStatus.offline.push(friend);
  
      // const key = friend.online ? 'online' : 'offline';
      // friendsByStatus[key].push(friend);
    }
  
    return friendsByStatus;
  };
  
  console.log(getFriendsByStatus(friends));



  /*
 * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:
 * - getItems()
 * - add(product)
 * - remove(productName)
 * - clear()
 * - countTotalPrice()
 * - increaseQuantity(productName)
 * - decreaseQuantity(productName)
 *
 * { name: 'üçé', price: 50 }
 * { name: 'üçá', price: 70 }
 * { name: 'üçã', price: 60 }
 * { name: 'üçì', price: 110 }
 */

const cart = {
    items: [],
    getItems() {},
    add(product) {},
    remove(productName) {},
    clear() {},
    countTotalPrice() {},
    increaseQuantity(productName) {},
    decreaseQuantity(productName) {},
  };
  
  // console.table(cart.getItems());
  
  cart.add({ name: 'üçé', price: 50 });
  cart.add({ name: 'üçã', price: 60 });
  cart.add({ name: 'üçã', price: 60 });
  cart.add({ name: 'üçì', price: 110 });
  
  // console.table(cart.getItems());
  
  cart.remove('üçé');
  // console.table(cart.getItems());
  
  // cart.clear();
  // console.table(cart.getItems());
  
  // cart.increaseQuantity('üçé');
  // console.table(cart.getItems());
  
  // cart.decreaseQuantity('üçã');
  // cart.decreaseQuantity('üçã');
  // console.table(cart.getItems());
  
  // console.log('Total: ', cart.countTotalPrice());





// –ó–ê–ù–Ø–¢–ò–ï 13.09.21

  // 1)  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π, –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ user, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ:

// –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ mood —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 'happy'
// –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ hobby –Ω–∞ 'skydiving'
// –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ premium –Ω–∞ false
// –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞ user –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è Object.keys() –∏ for...of

const user = {
  name: "Mango",
  age: 20,
  hobby: "html",
  premium: true,
};

user.mood = "happy";
user.hobby = "skydiving";
user.premium = false;

delete user.hobby; // —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞
console.log(user);

const keys = Object.keys(user);

for (let key of keys) {
  console.log(`${key}: ${user[key]}`);
}

console.log(keys);

// 2) –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞—Ä–ø–ª–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum.
// –î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è 390. –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç salaries –ø—É—Å—Ç, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0.

function countTotalSalaries(object) {
  const values = Object.values(object);
  let total = 0;
  for (let number of values) {
    total += number;
  }
  return total;
}

const salaries = {
  John: 100,
  Ann: 160,
  Pete: 130,
};

const salaries2 = {};

const result = countTotalSalaries(salaries2);
const result2 = countTotalSalaries(salaries);
console.log(`result`, result);

// 3) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ-—Ü–∏—é calcTotalPrice(stones, stoneName), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—å–µ–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–º–Ω—è.
// –§ - —Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–º–Ω–µ–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, —Ü–µ–Ω–æ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑ –æ–±—å–µ–∫—Ç–∞

const stones = [
  { name: "–ò–∑—É–º—Ä—É–¥", cost: 1300, quantity: 4 },
  { name: "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç", cost: 2700, quantity: 3 },
  { name: "–°–∞–ø—Ñ–∏—Ä", cost: 400, quantity: 7 },
  { name: "–©–µ–±–µ–Ω—å", cost: 200, quantity: 2 },
];

function calcTotalPrice(stoneName, stones) {
  for (let stone of stones) {
    if (stone.name === stoneName) {
      return stone.cost * stone.quantity;
    }
  }
  return "Stone not exist";
}

function calcTotalPrice(stoneName, stones) {
  let result;
  for (let stone of stones) {
    if (stone.name === stoneName) {
      result = stone.price * stone.quantity;
    }
  }
  return result;
}

console.log(calcTotalPrice("–ö–≤–∞—Ä—Ü", stones)); // 400
calcTotalPrice(stones, "–°–∞–ø—Ñ–∏—Ä"); // 2800

const adventurer = {
  name: 'Alice',
  cat: {
    name: 'Dinah'
  }
};

const dogName = adventurer.dog?.name;
console.log(dogName);
// expected output: undefined



// –ó–∞–¥–∞—á–∞

/*
 * –¢–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞—Ü–∫–∏–π –≤—Å–µ–≥–æ –¥–≤–∞.
 * –ú–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –ª–∏–±–æ —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á–µ—Ç–∞.
 */
const Transaction = {
    DEPOSIT: "deposit",
    WITHDRAW: "withdraw",
  };
  
  /*
   * –ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: id, type –∏ amount
   */
  
  const wallet = {
    // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞
    balance: 100,
  
    // –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    transactions: [],
  
    /*
     * –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
     * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É –∏ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
     */
    createTransaction(amount, type) {
        // this.transactions.push({
        //     id: this.transactions.length,
        //     amount,
        //     type,
        // });
      return {
        id: this.transactions.length,
        amount,
        type,
      };
    },
  
    /*
     * –ú–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–º–º—ã –∫ –±–∞–ª–∞–Ω—Å—É.
     * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
     * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
     * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     */
    deposit(amount) {
      this.balance += amount;
    //   this.createTransaction(amount, Transaction.DEPOSIT);
      const transaction = this.createTransaction(amount, Transaction.DEPOSIT);
      this.transactions.push(transaction);
    },
  
    /*
     * –ú–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–Ω—è—Ç–∏–µ —Å—É–º–º—ã —Å –±–∞–ª–∞–Ω—Å–∞.
     * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
     * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
     * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
     *
     * –ï—Å–ª–∏ amount –±–æ–ª—å—à–µ —á–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, –≤—ã–≤–æ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
     * –æ —Ç–æ–º, —á—Ç–æ —Å–Ω—è—Ç–∏–µ —Ç–∞–∫–æ–π —Å—É–º–º—ã –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.
     */
    withdraw(amount) {
      this.balance -= amount;
      const transaction = this.createTransaction(amount, Transaction.WITHDRAW);
      this.transactions.push(transaction);
    },
  
    /*
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
     */
    getBalance() {
      return this.balance;
    },
  
    /*
     * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞—Ü–∏–∏ –ø–æ id
     */
    getTransactionDetails(id) {
      for (let transaction of this.transactions) {
        if (transaction.id === id) {
          return transaction;
        }
      }
      return "Transaction not exist";
    },
  
    /*
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤
     * –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     */
    //   getTransactionTotal(type) {
    //     const searchResult = [];
    //     let total = 0;
    //     for (let transaction of this.transactions) {
    //       if (transaction.type === type) {
    //         searchResult.push(transaction);
    //       }
    //     }
  
    //     for (let transaction of searchResult) {
    //       total += transaction.amount;
    //     }
    //     return total;
    //   },
  
    getTransactionTotal(type) {
      let total = 0;
      for (let transaction of this.transactions) {
        if (transaction.type === type) {
          total += transaction.amount;
        }
      }
      return total;
    },
  };
  
  wallet.deposit(50);
  wallet.withdraw(30);
  wallet.deposit(150);
  wallet.deposit(20);
  wallet.withdraw(10);
  
  console.log(wallet.getBalance());
  console.log(wallet.transactions);
  console.log(wallet.getTransactionDetails(3));
  console.log(wallet.getTransactionTotal(Transaction.DEPOSIT));
  console.log(wallet.getTransactionTotal(Transaction.WITHDRAW));




  /*
 * –û–ø–µ—Ä–∞—Ü–∏—è spread (—Ä–∞—Å–ø—ã–ª–µ–Ω–∏–µ)
 * - Array.prototype.concat() –∏ –∞–Ω–∞–ª–æ–≥ —á–µ—Ä–µ–∑ spread
 */
const numbers = [1, 2, 3].concat([4, 5, 6], [7, 8, 9]);

// rest - —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ
// spread - –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ (—ç–ª–µ–º–µ–Ω—Ç—ã –æ–¥–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –¥—Ä—É–≥—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é)
// –æ–ø–µ—Ä–∞—Ü–∏—è spread –Ω–µ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞—è
// –µ—Å–ª–∏ –ø—Ä–∏–º–∏—Ç–∏–≤—ã (–ø–µ—Ä–µ–¥–∞—á–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é) - –¥–µ–ª–∞–µ—Ç—Å—è –∫–æ–ø–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
// –µ—Å–ª–∏ —Å–ª–æ–∂–Ω—ã–π —Ç–∏–ø (–ø–µ—Ä–µ–¥–∞—á–∞ –ø–æ —Å—Å—ã–ª–∫–µ) - –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ (–Ω–∞ –æ–±—ä–µ–∫—Ç, —Ñ—É–Ω–∫—Ü–∏—é –∏ —Ç.–¥.), –Ω–µ –∫–æ–ø–∏—è

const numbers = [0, 5, 10, ...[1, 2, 3], 4, 5];

const numbers = [
    1000,
    ...[1, 2, 3],
    5000,
    ...[4, 5, 6],
    7000,
    ...[7, 8, 9],
    9000,
  ];
  
  // console.log(numbers);
  
  /*
   * –ü–æ–∏—Å–∫ —Å–∞–º–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –∏–ª–∏ –±–æ–ª—å—à–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (—á–∏—Å–ª–∞)
   */
  const temps = [18, 14, 12, 21, 17, 29, 24];
  
  console.log(Math.max(1, 4, 17, 5, 6));
  console.log(Math.min(...temps));
  console.log(temps);
  
  

  const a = [{ x: 1 }, { y: 2 }, { z: 3 }];
  const b = [...a];
  
  console.log('a: ', a);
  console.log('b: ', b);
  
  console.log(a[0] === b[0]); //true, —Ç.–∫. —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ
  console.log(a === b); //false, —Ç.–∫. –ø—Ä–∏ —Ä–∞—Å–ø—ã–ª–µ–Ω–∏–∏ —Å–∞–º–∏ –º–∞—Å—Å–∏–≤—ã –Ω–µ —Ä–∞–≤–Ω—ã
  
  a[0].x = 1000; //–∑–Ω–∞—á–µ–Ω–∏–µ —Ö –ø–æ–º–µ–Ω—è–µ—Ç—Å—è –≤ –æ–±–µ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö
  
  console.log('a: ', a);
  console.log('b: ', b);
  
  /*
   * –°—à–∏–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Å—Å–∏–≤–æ–≤ –≤ –æ–¥–∏–Ω —á–µ—Ä–µ–∑ concat() –∏ spread
   */
  const lastWeekTemps = [1, 2, 3];
  const currentTemps = [4, 5, 6];
  const nextWeekTemps = [7, 8, 9];
  
  const allTemps = [...lastWeekTemps, ...currentTemps, ...nextWeekTemps];
  // console.log(allTemps);
  
  /*
   * –†–∞—Å–ø—ã–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
   * - Object.prototype.assign() –∏ spread
   */
  const a = { x: 1, y: 2 };
  const b = { x: 0, z: 3 };
  
  const c = Object.assign({name: 'Mango' }, a, b); //—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
  
  const c = {
    ...a,
    x: 10,
    ...b,
    y: 20,
  };
  
  // console.log(c);
  
  const defaultSettings = {
    theme: 'light',
    showNotifications: true,
    hideSidebar: false,
  };
  
  const userSettings = {
    showNotifications: false,
    hideSidebar: true,
  };
  
  const finalSettings = {
    ...defaultSettings,
    ...userSettings,
  };
  
  console.log(finalSettings);


  /*
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ (—Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞)
 * - –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * - –ò–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ç –∏–º–µ–Ω–∏ —Å–≤–æ–π—Å—Ç–≤–∞
 */

  const playlist = {
    name: '–ú–æ–π —Å—É–ø–µ—Ä –ø–ª–µ–π–ª–∏—Å—Ç',
    rating: 5,
    tracks: ['—Ç—Ä–µ–∫-1', '—Ç—Ä–µ–∫-2', '—Ç—Ä–µ–∫-3'],
    trackCount: 3,
  };

// const { } = playlist;
// –µ—Å–ª–∏ —Å–ª–µ–≤–∞ –æ—Ç —Ä–∞–≤–Ω–æ –≤–∏–¥–∏–º { } - —ç—Ç–æ –Ω–µ –ª–∏—Ç–µ—Ä–∞–ª, —ç—Ç–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ (–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è) –æ–±—ä–µ–∫—Ç–∞
// –≤–Ω—É—Ç—Ä–∏ –±—É–¥—É—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Ç–∞–∫–æ–µ –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–∞–∫ –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
// —Ç.–µ. —Å–æ–∑–¥–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
//  const { rating, tracks, name, trackCount } = playlist;

// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–µ–ª–∞–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤ –∫–æ–¥–µ
// –ù–∞–ø—Ä–∏–º–µ—Ä:
    console.log (
    playlist.name,
    playlist.rating,
    playlist.tracks,
    playlist.trackCount
);
  
  // const {
  //   rating,
  //   tracks,
  //   name,
  //   trackCount: numberOfTracks,  ---> —Ç–∞–∫ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
  //   author = 'user',
  // } = playlist;
  
  // console.log(numberOfTracks);
  
  /*
   * –ì–ª—É–±–æ–∫–∞—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
   */

// !!! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –º–µ—Ç–æ–¥—ã (—Ñ—É–Ω–∫—Ü–∏–∏)

//   –ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ –ª–µ–∂–∏—Ç –µ—â–µ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç

  const profile = {
    name: 'Jacques Gluke',
    tag: 'jgluke',
    location: 'Ocho Rios, Jamaica',
    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',
    stats: {
      followers: 5603,
      views: 4827,
      likes: 1308,
    },
  };

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º –æ–±–∞ –æ–±—ä–µ–∫—Ç–∞
  const { avatar, name, tag, location, followers, views, likes } = profile;
  const { followers, views, likes } = stats;

// –õ–∏–±–æ –¥–µ–ª–∞–µ–º –≥–ª—É–±–æ–∫—É—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é
  const {
    avatar,
    name,
    tag,
    location,
    stats: { followers, views, likes },
  } = profile;

  console.log(name, tag, location, avatar, followers, views, likes);
  

  /*
   * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤
   */

// !!! –ü–æ—Ä—è–¥–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–∞–∂–µ–Ω

  const rgb = [255, 100, 80];
  
  const [red, green, blue] = rgb;

  const [red, , blue] = rgb; //–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
  
  // console.log(red, green, blue);
  
  const authors = {
    kiwi: 4,
    poly: 7,
    ajax: 9,
    mango: 6,
  };
  
  const entries = Object.entries(authors); //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–∞—Å—Å–∏–≤–æ–≤
// [[kiwi, 4], [poly, 7], [ajax, 9], [mango, 6]]

  for (const entry of entries) {
    //   console.log(entry);
    // –£—Ä–æ–≤–µ–Ω—å 1
    const name = entry[0];
    const rating = entry[1];

    // –£—Ä–æ–≤–µ–Ω—å 2
    // –ª–∏–±–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤
    const [name, rating] = entry;
  }

    // –£—Ä–æ–≤–µ–Ω—å 3
    // –ª–∏–±–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏
for (const [name, rating] of entries) {
      console.log(name, rating);
  }
  
  
  
  /*
   * –û–ø–µ—Ä–∞—Ü–∏—è rest (—Å–±–æ—Ä)
   */

  const profile = {
    name: 'Jacques Gluke',
    tag: 'jgluke',
    location: 'Ocho Rios, Jamaica',
    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',
    stats: {
      followers: 5603,
      views: 4827,
      likes: 1308,
    },
  };
  
  const { name, tag, location, ...restProps } = profile;
  
  // console.log(name, tag, location); ---> —á–∞—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤ –∑–∞–±–∏—Ä–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  // console.log(restProps); ---> –æ–±—ä–µ–∫—Ç —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
  // console.log(profile);
  


  /*
   * –ü–∞—Ç—Ç–µ—Ä–Ω ¬´–û–±—å–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫¬ª
   * - –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞-–æ–±—å–µ–∫—Ç–∞ –≤ –ø–æ–¥–ø–∏—Å–∏ —Ñ—É–Ω–∫—Ü–∏–∏
   * - rest –ø—Ä–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø–æ–¥–ø–∏—Å–∏
   */
  
//   –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ –ª–∏–±–æ –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const showProfileInfo = function (userProfile) {
    const { name, tag, location, ...restProps } = userProfile;
  
    // console.log(name, tag, location, avatar, followers, views, likes);
    console.log(restProps);
  };

// –ª–∏–±–æ –≤ –ø–æ–¥–ø–∏—Å–∏ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
const showProfileInfo = function ({ name, tag, location, ...restProps }) {  
    // console.log(name, tag, location, avatar, followers, views, likes);
    console.log(restProps);
  };


  const profile = {
    name: 'Jacques Gluke',
    tag: 'jgluke',
    location: 'Ocho Rios, Jamaica',
    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',
    stats: {
      followers: 5603,
      views: 4827,
      likes: 1308,
    },
  };
  
  showProfileInfo(profile);


  const profile = {
    name: 'Jacques Gluke',
    tag: 'jgluke',
    location: 'Ocho Rios, Jamaica',
    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',
    stats: {
      followers: 5603,
      views: 4827,
      likes: 1308,
    },
  };
  
  const makeProfileMarkup = function (userProfile) {
    const {
      avatar = 'https://i.pravatar.cc/400?img=6',
      name,
      tag,
      location = 'Planet Earth',
      stats: { followers, views, likes },
    } = userProfile;
  
    return `<div>
      <img src="${avatar}" alt="user avatar">
      <p>${name}<span>@${tag}</span></p>
      <p>Location: ${location}</p>
      <ul>
        <li>Followers: ${followers}</li>
        <li>Views: ${views}</li>
        <li>Likes: ${likes}</li>
      </ul>
    </div>`;
  };
  
  const markup = makeProfileMarkup(profile);
  
  console.log(markup);
  
  document.body.insertAdjacentHTML('afterbegin', markup);


  /*
 * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:
 * - getItems()
 * - add(product)
 * - remove(productName)
 * - clear()
 * - countTotalPrice()
 * - increaseQuantity(productName)
 * - decreaseQuantity(productName)
 *
 * { name: 'üçé', price: 50 }
 * { name: 'üçá', price: 70 }
 * { name: 'üçã', price: 60 }
 * { name: 'üçì', price: 110 }
 */

const cart = {
    items: [],
    getItems() {
      return this.items;
    },
    add(product) {
      for (const item of this.items) {
        if (item.name === product.name) {
          item.quantity += 1;
          return;
        }
      }
  
      const newProduct = {
        ...product, //—Ä–∞—Å–ø—ã–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
        quantity: 1, //–¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      };
  
      this.items.push(newProduct);
    },
    remove(productName) {
      const { items } = this;
  
      for (let i = 0; i < items.length; i += 1) {
        const item = items[i];
  
        if (productName === item.name) {
          console.log('–Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç ', productName);
          console.log('–∏–Ω–¥–µ–∫—Å: ', i);
  
          items.splice(i, 1);
        }
      }
    },
    clear() {
      this.items = [];
    },
    countTotalPrice() {
      const { items } = this;
      let total = 0;
  
      for (const { price, quantity } of items) {
        total += price * quantity;
      }
  
      return total;
    },
    increaseQuantity(productName) {},
    decreaseQuantity(productName) {},
  };
  
  console.log(cart.getItems());
  
  cart.add({ name: 'üçé', price: 50 });
  cart.add({ name: 'üçá', price: 60 });
  cart.add({ name: 'üçã', price: 60 });
  cart.add({ name: 'üçã', price: 60 });
  cart.add({ name: 'üçì', price: 110 });
  cart.add({ name: 'üçì', price: 110 });
  cart.add({ name: 'üçì', price: 110 });
  
  console.table(cart.getItems());
  
  console.log('Total: ', cart.countTotalPrice());
  
  cart.remove('üçá');
  console.table(cart.getItems());
  
  // cart.clear();
  // console.log(cart.getItems());
  
  console.log('Total: ', cart.countTotalPrice());
  
  // cart.increaseQuantity('üçé');
  // console.table(cart.getItems());
  
  // cart.decreaseQuantity('üçã');
  // cart.decreaseQuantity('üçã');
  // console.table(cart.getItems());



  /**
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
 *
 * –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
 * –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
 */

function calcBMI({ weight, height }) {
    const numericWeight = Number(weight.replace(',', '.'));
    const numericHeight = Number(height.replace(',', '.'));
    return Number((numericWeight / numericHeight ** 2).toFixed(1));
  }
  
  // –ë—ã–ª–æ
  // console.log(calcBMI('88,3', '1.75'));
  // console.log(calcBMI('68,3', '1.65'));
  // console.log(calcBMI('118,3', '1.95'));
  
  // –û–∂–∏–¥–∞–µ—Ç—Å—è
  console.log(
    calcBMI({
      weight: '88,3',
      height: '1.75',
    })
  );
  console.log(
    calcBMI({
      weight: '68,3',
      height: '1.65',
    })
  );
  console.log(
    calcBMI({
      weight: '118,3',
      height: '1.95',
    })
  );



/**
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
 *
 * –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
 * –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
 */

 function printContactsInfo({ names, phones }) {
    const nameList = names.split(',');
    const phoneList = phones.split(',');
    for (let i = 0; i < nameList.length; i += 1) {
      console.log(`${nameList[i]}: ${phoneList[i]}`);
    }
  }
  
  // –ë—ã–ª–æ
  // printContactsInfo(
  //   'Jacob,William,Solomon,Artemis',
  //   '89001234567,89001112233,890055566377,890055566300'
  // );
  
  // –û–∂–∏–¥–∞–µ—Ç—Å—è
  printContactsInfo({
    names: 'Jacob,William,Solomon,Artemis',
    phones: '89001234567,89001112233,890055566377,890055566300',
  });



  /**
 * –ì–ª—É–±–æ–∫–∞—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
 *
 * –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
 * –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
 */
   function getStockReport({ companyName, stock: { repair, defence} }) {
    return `${companyName} has ${repair + defence} items in stock`;
  }

function getStockReport({ companyName, stock }) {
    let total = 0;
    const values = Object.values(stock);
    for (const value of values) {  //–ª–∏–±–æ for (const value of Object.values(stock))
      total += value;
    }
    return `${companyName} has ${total} items in stock`;
  }
  
  // –ë—ã–ª–æ
  // console.log(getStockReport('Cyberdyne Systems', 150, 50));
  
  // –û–∂–∏–¥–∞–µ—Ç—Å—è
  console.log(
    getStockReport({
      companyName: 'Cyberdyne Systems',
      stock: {
        repair: 150,
        defence: 50,
      },
    })
  ); // "Cyberdyne Systems has 200 bots in stock"
  
  console.log(
    getStockReport({
      companyName: 'Babushka',
      stock: {
        apples: 50,
        potato: 100,
        eggs: 150,
      },
    })
  ); // "Cyberdyne Systems has 200 bots in stock"



  /**
 * –û–ø–µ—Ä–∞—Ü–∏—è spread
 *
 * –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é `createContact(partialContact)` —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞
 * –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `id`
 * –∏ `createdAt`, –∞ —Ç–∞–∫–∂–µ `list` —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "default" –µ—Å–ª–∏
 * –≤ `partialContact` –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞.
 */

function createContact(partialContact) {
    return {
      list: 'default', //–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ - –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç—Å—è
      ...partialContact, //—Ä–∞—Å–ø—ã–ª—è–µ–º –æ–±—ä–µ–∫—Ç
      id: generateId(),
      createdAt: Date.now(),
    };
  }
  
  console.log(
    createContact({
      name: 'Mango',
      email: 'mango@mail.com',
      list: 'friends',
    })
  );
  console.log(
    createContact({
      name: 'Poly',
      email: 'poly@hotmail.com',
    })
  );
  
  function generateId() {
    return '_' + Math.random().toString(36).substr(2, 9);
  }


  /**
 * –û–ø–µ—Ä–∞—Ü–∏—è rest
 *
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `transformUsername(user)` —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞
 * –Ω–æ–≤—ã–π –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º `fullName`, –≤–º–µ—Å—Ç–æ `firstName` –∏ `lastName`.
 */

function transformUsername({ firstName, lastName, ...otherProps }) {
    return {
      ...otherProps,
      fullName: `${firstName} ${lastName}`,
    };
  }
  
  console.log(
    transformUsername({
      id: 1,
      firstName: 'Jacob',
      lastName: 'Mercer',
      email: 'j.mercer@mail.com',
      friendCount: 40,
    })
  );
  
  console.log(
    transformUsername({
      id: 2,
      firstName: 'Adrian',
      lastName: 'Cross',
      email: 'a.cross@hotmail.com',
      friendCount: 20,
    })
  );
