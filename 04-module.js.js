/*
 * –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ (callback)
 * - –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 * - –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç—Å
 *   ¬´—Ñ—É–Ω–∫—Ü–∏–µ–π –æ–±—Ä–∞—Ç–Ω–æ–≥–æ (–æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ) –≤—ã–∑–æ–≤–∞¬ª (callback-—Ñ—É–Ω–∫—Ü–∏—è)
 * - –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
 *   –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´—Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞¬ª
 */

// fnA ---> —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞, —Ç.–∫. –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é
// const fnA = function (message, callback) {  ----> —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä
//     console.log(message);

//     console.log(callback);
//     callback(100); ---> –≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫ —Ñ—É–Ω–∫—Ü–∏–∏
// };

// fnB ---> –∫–æ–ª–ª–±—ç–∫ —Ñ—É–Ω–∫—Ü–∏—è
// const fnB = function (number) {
//     console.log('–≠—Ç–æ –ª–æ–≥ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ fnB', number);
// };

// fnA('qweqwe', fnB);


/*
 * —Ñ—É–Ω–∫—Ü–∏—è doMath(a, b, callback)
 */

const doMath = function (a, b, callback) {
    const result = callback(a, b);

    console.log(result);
};

const add = function (x, y) {
    return x + y;
}

const sub = function (x, y) {
    return x - y;
}

doMath(2, 3, add);
doMath(10, 8, sub);


// Inline-—Ñ—É–Ω–∫—Ü–∏—è (–ø–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤–º–µ—Å—Ç–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–µ–µ)

// doMath(2, 3, function (x, y) {
//     return x + y;
// });

// doMath(10, 8, function (x, y) {
//     return x - y;
// });



/*
 * –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
 */

const buttonRef = document.querySelector('.js-button');

const handleBtnClick = function () {
    console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ ' + Date.now());
};

buttonRef.addEventListener('click', handleBtnClick);

/*
 * –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤: –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
 */

const onGetPositionSuccess = function (position) {
    console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ onGetPositionSuccess');
    console.log(position);
};

const onGetPositionError = function (error) {
    console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ onGetPositionError');
    console.log(error);
};

window.navigator.geolocation.getCurrentPosition(
    onGetPositionSuccess,
    onGetPositionError,
);

/*
 * –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤: –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
 */

const callback = function () {
    console.log('–ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–ª–±–µ–∫–∞ –≤ —Ç–∞–π–º–∞—É—Ç–µ');
};

// console.log('–í –∫–æ–¥–µ –ø–µ—Ä–µ–¥ —Ç–∞–π–º–∞—É—Ç–æ–º');
// setTimeout(callback, 2000); ---> –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
// console.log('–í –∫–æ–¥–µ –ø–æ—Å–ª–µ —Ç–∞–π–º–∞—É—Ç–∞');



/*
 * –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤: http-–∑–∞–ø—Ä–æ—Å
 * - API URL: https://pokeapi.co/api/v2/pokemon
 */

const onRequestSuccess = function (response) {
    console.log(
        '–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ onRequestSuccess –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –±–µ–∫–µ–Ω–¥–∞',
    );
    console.log(response);
};

// fetch('https://pokeapi.co/api/v2/pokemon')
//     .then(res => res.json())
//     .then(onRequestSuccess);



/*
 * –§–∏–ª—å—Ç—Ä
 */

const filter = function (array, test) {
    const filteredArray = [];

    for (const el of array) {
        console.log(el);
        const passed = test(el);

        if (passed) {
            filteredArray.push(el);
        }
    }

    return filteredArray;
};

// 1. –Ω–∞–¥–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
// 2. —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
// 3. –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç true
// 4. –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –ù–ï —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç false

const callback1 = function (value) {
    return value >= 3;
};

const r1 = filter([1, 2, 3, 4, 5], callback1);
console.log(r1);

const callback2 = function (value) {
    return value <= 4;
};

const r2 = filter([1, 2, 3, 4, 5, 6, 7, 8], callback2);
console.log(r2);

const fruits = [
    { name: 'apples', quantity: 200, isFresh: true },
    { name: 'grapes', quantity: 150, isFresh: false },
    { name: 'bananas', quantity: 100, isFresh: true },
];

const getFruitsWithQuantity = function (fruit) {
    return fruit.quantity >= 120;
};

const r3 = filter(fruits, getFruitsWithQuantity);
console.log(r3);



//–ó–ê–ú–´–ö–ê–ù–ò–ï
/*
 * –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.
*
* –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø
* –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º (–æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏)
* —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Ç–æ–π –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –µ—ë –≤–µ—Ä–Ω—É–ª–∏),
* —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–∑–∞–º—ã–∫–∞–Ω–∏–µ¬ª.
*/

// –ò–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é (–æ–±—ä—è–≤–ª–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏)
const fnA = function (parameter) {
   const innerVariable = '–∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ fnA';

   const innerFunction = function () {
       console.log(parameter);
       console.log(innerVariable);
       console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ innerFunction');
   };

   return innerFunction;
};

const fnB = fnA(555);

fnB(); //–ø—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ fnA
// –∑–∞–º—ã–∫–∞–µ—Ç—Å—è –Ω–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

console.log(fnB);


/*
* –ü–æ–≤–∞—Ä—ë–Ω–æ–∫
*/
// const makeDish = function (sheffName, dish) {
//     console.log(`${sheffName} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
// };

// makeDish('Mango', '–ø–∏—Ä–æ–∂–æ–∫');
// makeDish('Mango', '–æ–º–ª–µ—Ç');
// makeDish('Mango', '—á–∞–π');

// makeDish('Poly', '–∫–æ—Ç–ª–µ—Ç—ã');
// makeDish('Poly', '—Å—É–ø–∏–∫');
// makeDish('Poly', '–∫–æ—Ñ–µ');

const makeSheff = function (name) {
//    const innverVar = 555;
//    const message = 'hello';

   const makeDish = function (dish) {  
    // –≤ –∑–∞–º—ã–∫–∞–Ω–∏–µ –ø–æ–ø–∞–¥–∞—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    //    console.log(message);
    //    console.log(innverVar);
       console.log(`${name} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
   };

   return makeDish;
};

const mango = makeSheff('Mango');

console.dir(mango);
// [[Scopes]]: Closure ---> –Ω–∞ —á–µ–º –∑–∞–º–∫–Ω—É–ª–∞—Å—å —Ñ—É–Ω–∫—Ü–∏—è

mango('–∫–æ—Ç–ª–µ—Ç—ã');
mango('–ø–∏—Ä–æ–∂–æ–∫');

const poly = makeSheff('Poly');

console.dir(poly);

poly('—á–∞–π');
poly('–æ–º–ª–µ—Ç');

console.dir(mango);

/*
* –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
*/

// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder = function (number, places) {
//     return Number(number.toFixed(places));
// };

// console.log(rounder(3.4567, 2));
// console.log(rounder(3.4567, 3));
// console.log(rounder(5.1234, 2));
// console.log(rounder(3.4567, 3));

const rounder = function (places) {
   return function (number) {
       return Number(number.toFixed(places));
   };
};

// const rounder2 = rounder(2);
// const rounder3 = rounder(3);

// console.dir(rounder2);
// console.dir(rounder3);

// console.log(rounder2(3.4567));
// console.log(rounder2(5.4512312312367));
// console.log(rounder3(3.4567));
// console.log(rounder2(5.1234));
// console.log(rounder3(3.4567));
// console.log(rounder3(10.67667));

/*
* –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - —Å–∫—Ä—ã—Ç–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
*/

const salaryManagerFactory = function (employeeName, baseSalary = 0) {
   let salary = baseSalary; //—ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–æ–≤ –≤ return

   return {  //–æ–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
       raise(amount) {
           if (amount > 1000) {
               return '–¢—ã –æ—Ñ–∏–≥–µ–ª?';
           }

           salary += amount;
       },
       lower(amount) {
           salary -= amount;
       },
       current() {
           return `–¢–µ–∫—É—â–∞—è –∑–∞—Ä–ø–∞–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
       },
   };
};

const salaryManager = salaryManagerFactory('Mango', 5000);

console.log(salaryManager.current());

console.log(salaryManager.raise(10000000));

console.log(salaryManager.current());

// const myLibFactory = function () {
//     let value = 0;

//     const add = function (num) {
//         value += num;
//     };

//     return {
//         add: add,
//         getValue() {
//             return value;
//         },
//     };
// };

// const myLib = myLibFactory();

// console.dir(myLib.getValue);

// console.log(myLib);
// console.log(myLib.getValue());
// myLib.add(10);
// console.log(myLib.getValue());



/*
 * –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 * - –û–±—ä—è–≤–ª–µ–Ω–∏–µ
 * - –Ø–≤–Ω—ã–π –∏ –Ω–µ—è–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç
 * - –ê—Ä–≥—É–º–µ–Ω—Ç—ã
 * - –ù–µ—è–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –æ–±—ä–µ–∫—Ç–∞
 */

const add = function (a, b, c) {
    console.log(arguments);
    return a + b + c;
};

// –¢–æ–∂–µ —Å–∞–º–æ–µ, —Ç–æ–ª—å–∫–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
const addArrow = (a, b, c) => {
    return a + b + c; //—è–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏)
};

// –°—Ç—Ä–µ–ª–∫–∞ —Å –Ω–µ—è–≤–Ω—ã–º –≤–æ–∑–≤—Ä–∞—Ç–æ–º (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å—Ä–∞–∑—É return)
const addArrow = (a, b, c) => a + b + c;

// —É —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π arguments (–ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤ –¥–ª—è —Å–±–æ—Ä–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤)
// –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º rest –¥–ª—è —Å–±–æ—Ä–∞ –≤—Å–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const add = (...args) => {
    console.log(args);
}

console.log(add(5, 10, 15));
console.log(addArrow(5, 10, 15));



const fnA = function () {
  return {
    a: 5,
  };
};

console.log(fnA());

const arrowFnA = () => { arrowA: 5 }; //–±—É–¥–µ—Ç –æ—à–∏–±–∫–∞

// –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–µ—è–≤–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç, –±–µ—Ä–µ–º –≤ —Å–∫–æ–±–∫–∏ (–≤—ã—Ä–∞–∂–µ–Ω–∏–µ)
const arrowFnA = () => ({ arrowA: 5 });

// console.log(arrowFnA());



// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–µ–ª–æ–∫ –≤–º–µ—Å—Ç–æ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
const filter = (array, test) => {
    const filteredArray = [];

    for (const el of array) {
        console.log(el);
        const passed = test(el);

        if (passed) {
            filteredArray.push(el);
        }
    }

    return filteredArray;
};

// const callback1 = value => value >= 3;
// const r1 = filter([1, 2, 3, 4, 5], callback1);

// –ò–õ–ò –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É (—Å—Ç—Ä–µ–ª–∫–∞ –≤–º–µ—Å—Ç–æ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏)
const r1 = filter([1, 2, 3, 4, 5], value => value >= 3);

console.log(r1);


// const callback2 = value => value <= 4;
// const r2 = filter([1, 2, 3, 4, 5, 6, 7, 8], callback2);

const r2 = filter([1, 2, 3, 4, 5, 6, 7, 8], value => value <= 4);
console.log(r2);


const fruits = [
    { name: 'apples', quantity: 200, isFresh: true },
    { name: 'grapes', quantity: 150, isFresh: false },
    { name: 'bananas', quantity: 100, isFresh: true },
];

// const getFruitsWithQuantity = fruit => fruit.quantity >= 120;

const r3 = filter(fruits, fruit => fruit.quantity >= 120);
console.log(r3);


// –£ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç —Å–≤–æ–µ–≥–æ this!!!
// this –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–µ –≤ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∞ –≤ –º–æ–º–µ–Ω—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è
// –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–µ–ª–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –º–µ—Å—Ç–æ–º –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è

// –û–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ –º–µ—Ç–æ–¥–µ –æ–±—ä–µ–∫—Ç–∞
const user = {
    fullName: "Mango",
    showName() {
        console.log('this: ', this);
        console.log('this.fullName: ', this.fullName);

        // –≤ –º–µ—Ç–æ–¥–µ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–¥–∏–º –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        const inner = function() {
            console.log('this in inner: ', this);
        }

        inner(); //–≤—ã–∑—ã–≤–∞–µ–º –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —Ç.–µ. –Ω–∏–∫–∞–∫–æ–π –æ–±—ä–µ–∫—Ç –µ–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç
        // ----> indefined
    },
};

user.showName();

// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ –º–µ—Ç–æ–¥–µ –æ–±—ä–µ–∫—Ç–∞
const user = {
    fullName: "Mango",
    showName() {
        console.log('this: ', this);
        console.log('this.fullName: ', this.fullName);

        // –≤ –º–µ—Ç–æ–¥–µ –æ–±—ä–µ–∫—Ç–∞ –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–ø–∏—à–µ–º –Ω–∞ —Å—Ç—Ä–µ–ª–∫—É
        const inner = () => {
            console.log('this in inner: ', this);
        }

        inner(); 
        //–±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–æ–¥–∏—Ç–µ–ª—è, —Ç.–µ. –Ω–∞ –æ–±—ä–µ–∫—Ç user
        // ---> 'this in inner: ' ....
    },
};

user.showName();


// –ù–ò–ö–û–ì–î–ê –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–µ–ª–∫—É –∫–∞–∫ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞!!!
// –ù–∞–ø—Ä–∏–º–µ—Ä:
const user = {
    fullName: "Mango",
    showName: () => {
        console.log('this: ', this);
        console.log('this.fullName: ', this.fullName);
    },
}

user.showName();
// this –±—É–¥–µ—Ç –Ω–∞–≤—Å–µ–≥–¥–∞ indefined